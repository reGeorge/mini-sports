<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sports.mapper.MatchRecordMapper">
    
    <resultMap id="MatchRecordMap" type="com.example.sports.entity.MatchRecord">
        <id property="id" column="id"/>
        <result property="tournamentId" column="tournament_id"/>
        <result property="stageId" column="stage_id"/>
        <result property="groupId" column="group_id"/>
        <result property="groupName" column="group_name"/>
        <result property="player1Id" column="player1_id"/>
        <result property="player2Id" column="player2_id"/>
        <result property="player1Score" column="player1_score"/>
        <result property="player2Score" column="player2_score"/>
        <result property="winnerId" column="winner_id"/>
        <result property="status" column="status"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
        <result property="round" column="round"/>
        <result property="courtNumber" column="court_number"/>
        <result property="refereeId" column="referee_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <resultMap id="MatchRecordWithDetailsMap" type="com.example.sports.vo.MatchRecordVO" extends="MatchRecordMap">
        <result property="player1Name" column="player1_name"/>
        <result property="player2Name" column="player2_name"/>
        <result property="pointsChange" column="points_change"/>
        <result property="pointsBalance" column="points_balance"/>
        <result property="pointsType" column="points_type"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, tournament_id, stage_id, group_id, group_name, player1_id, player2_id,
        player1_score, player2_score, winner_id, status, start_time, end_time,
        round, court_number, referee_id, created_at, updated_at
    </sql>

    <select id="selectById" resultMap="MatchRecordMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM match_record
        WHERE id = #{id}
    </select>

    <select id="selectByTournamentAndStage" resultMap="MatchRecordMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM match_record
        WHERE tournament_id = #{tournamentId}
        AND stage_id = #{stageId}
        ORDER BY round ASC, id ASC
    </select>

    <select id="selectByGroupId" resultMap="MatchRecordMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM match_record
        WHERE group_id = #{groupId}
        ORDER BY id ASC
    </select>

    <select id="selectByRound" resultMap="MatchRecordMap">
        SELECT * FROM match_record
        WHERE stage_id = #{stageId}
        AND round = #{round}
        ORDER BY id ASC
    </select>

    <select id="selectByTournamentId" resultMap="MatchRecordMap">
        SELECT * FROM match_record
        WHERE tournament_id = #{tournamentId}
        ORDER BY created_at ASC
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO match_record (
            tournament_id, stage_id, group_id, group_name, player1_id, player2_id,
            player1_score, player2_score, winner_id, status, start_time,
            end_time, round, court_number, referee_id, created_at, updated_at
        ) VALUES (
            #{tournamentId}, #{stageId}, #{groupId}, #{groupName}, #{player1Id}, #{player2Id},
            #{player1Score}, #{player2Score}, #{winnerId}, #{status}, #{startTime},
            #{endTime}, #{round}, #{courtNumber}, #{refereeId}, #{createdAt}, #{updatedAt}
        )
    </insert>

    <update id="update">
        UPDATE match_record
        SET 
            tournament_id = #{tournamentId},
            stage_id = #{stageId},
            group_id = #{groupId},
            group_name = #{groupName},
            player1_id = #{player1Id},
            player2_id = #{player2Id},
            player1_score = #{player1Score},
            player2_score = #{player2Score},
            winner_id = #{winnerId},
            status = #{status},
            start_time = #{startTime},
            end_time = #{endTime},
            round = #{round},
            court_number = #{courtNumber},
            referee_id = #{refereeId},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM match_record WHERE id = #{id}
    </delete>

    <!-- 查询用户的比赛历史 -->
    <select id="selectUserMatchHistory" resultMap="MatchRecordWithDetailsMap">
        SELECT 
            m.*,
            u1.nickname as player1_name,
            u2.nickname as player2_name,
            pr.points as points_change,
            pr.balance as points_balance,
            pr.type as points_type
        FROM match_record m
        LEFT JOIN user u1 ON m.player1_id = u1.id
        LEFT JOIN user u2 ON m.player2_id = u2.id
        LEFT JOIN points_record pr ON m.id = pr.ref_id AND pr.user_id = #{userId}
        WHERE (m.player1_id = #{userId} OR m.player2_id = #{userId})
        AND m.status = 'FINISHED'
        ORDER BY m.created_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 统计用户的比赛总数 -->
    <select id="countUserMatches" resultType="int">
        SELECT COUNT(*)
        FROM match_record
        WHERE (player1_id = #{userId} OR player2_id = #{userId})
        AND status = 'FINISHED'
    </select>

    <!-- 统计用户的胜负场次 -->
    <select id="selectUserMatchStats" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_matches,
            SUM(CASE WHEN winner_id = #{userId} THEN 1 ELSE 0 END) as wins,
            SUM(CASE WHEN winner_id != #{userId} AND winner_id IS NOT NULL THEN 1 ELSE 0 END) as losses,
            SUM(CASE 
                WHEN player1_id = #{userId} THEN player1_score 
                ELSE player2_score 
            END) as total_scores,
            SUM(CASE 
                WHEN player1_id = #{userId} THEN player2_score 
                ELSE player1_score 
            END) as total_lost
        FROM match_record
        WHERE (player1_id = #{userId} OR player2_id = #{userId})
        AND status = 'FINISHED'
    </select>
</mapper>