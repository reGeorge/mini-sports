<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sports.mapper.TournamentRegistrationMapper">
    
    <resultMap id="RegistrationMap" type="com.example.sports.entity.TournamentRegistration">
        <id property="id" column="id"/>
        <result property="tournamentId" column="tournament_id"/>
        <result property="userId" column="user_id"/>
        <result property="status" column="status"/>
        <result property="paymentStatus" column="payment_status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <association property="user" javaType="com.example.sports.entity.User">
            <id property="id" column="user_id"/>
            <result property="nickname" column="nickname"/>
            <result property="phone" column="phone"/>
            <result property="avatarUrl" column="avatar_url"/>
        </association>
    </resultMap>
    
    <insert id="insert" parameterType="com.example.sports.entity.TournamentRegistration" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tournament_registration (
            tournament_id, user_id, status, payment_status, created_at, updated_at
        ) VALUES (
            #{tournamentId}, #{userId}, #{status}, #{paymentStatus}, #{createdAt}, #{updatedAt}
        )
    </insert>
    
    <update id="updateById" parameterType="com.example.sports.entity.TournamentRegistration">
        UPDATE tournament_registration
        SET status = #{status},
            payment_status = #{paymentStatus},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>
    
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM tournament_registration WHERE id = #{id}
    </delete>
    
    <select id="selectByTournamentId" resultMap="RegistrationMap">
        SELECT r.*, u.nickname, u.phone, u.avatar_url
        FROM tournament_registration r
        LEFT JOIN user u ON r.user_id = u.id
        WHERE r.tournament_id = #{tournamentId}
        ORDER BY 
            CASE r.status
                WHEN 'PENDING' THEN 1
                WHEN 'APPROVED' THEN 1
                WHEN 'WAITLIST' THEN 2
                WHEN 'REJECTED' THEN 3
                ELSE 4
            END,
            r.created_at ASC
    </select>
    
    <select id="selectByTournamentIdAndUserId" resultMap="RegistrationMap">
        SELECT r.*, u.nickname, u.phone, u.avatar_url
        FROM tournament_registration r
        LEFT JOIN user u ON r.user_id = u.id
        WHERE r.tournament_id = #{tournamentId}
        AND r.user_id = #{userId}
    </select>
    
    <select id="selectFirstWaitlist" resultMap="RegistrationMap">
        SELECT 
            r.*,
            u.id as user_id,
            u.nickname,
            u.phone,
            u.points,
            u.level,
            u.grip_style,
            u.racket_config
        FROM tournament_registration r
        LEFT JOIN user u ON r.user_id = u.id
        WHERE r.tournament_id = #{tournamentId}
        AND r.status = 'WAITLIST'
        ORDER BY r.created_at ASC
        LIMIT 1
    </select>
    
</mapper> 